#include "SPAAM_SVD.h"

//Dummy data using matlab dataset2
void buildVt_mb(vector<Vector2d,aligned_allocator<Vector2d>> &vt)
{
	Vector2d v;
	v(0)=640;
	v(1)=512;
	vt.push_back(v);
	v(0)=421.8696; 
	v(1)=308.9597;
	vt.push_back(v);
	v(0)=936.9136; 
	v(1)= 359.4142;
	vt.push_back(v);
	v(0)=1068.577; 
	v(1)= 521.5444;
	vt.push_back(v);
	v(0)=616.9477 ; 
	v(1)=693.1714;
	vt.push_back(v);
	v(0)=735.4165 ; 
	v(1)=648.0823;
	vt.push_back(v);
	v(0)=749.015; 
	v(1)= 651.4828;
	vt.push_back(v);
	v(0)=742.3047; 
	v(1)= 332.2188;
	vt.push_back(v);
	v(0)=871.382 ; 
	v(1)=308.8757;
	vt.push_back(v);
	v(0)=349.5841 ; 
	v(1)=560.1241;
	vt.push_back(v);
	v(0)=868.7517 ; 
	v(1)=320.9903;
	vt.push_back(v);
	v(0)=388.1878 ; 
	v(1)=649.7827;
	vt.push_back(v);
	v(0)=778.6762 ; 
	v(1)=528.902;
	vt.push_back(v);
	v(0)=713.0938 ; 
	v(1)=368.9323;
	vt.push_back(v);
	v(0)=325.655 ; 
	v(1)=477.9498;
	vt.push_back(v);
	v(0)=868.639 ; 
	v(1)=330.1384;
	vt.push_back(v);
	v(0)=831.9084 ; 
	v(1)=609.789;
	vt.push_back(v);
	v(0)=737.5873 ; 
	v(1)=501.4245;
	vt.push_back(v);
	v(0)=949.1493; 
	v(1)= 419.6629;
	vt.push_back(v);
	v(0)=773.1248 ; 
	v(1)=404.4763;
	vt.push_back(v);
}
void buildVf_mb(vector<Vector3d,aligned_allocator<Vector3d>> &vf)
{
	Vector3d v;
	v(0) = -0.05204565;
	v(1) = 0.196178;
	v(2) = -1.58271;
	vf.push_back(v);
	v(0) = -0.2429583;
	v(1) = -0.07107233;
	v(2) = -1.632792;
	vf.push_back(v);
	v(0) = 0.4006151;
	v(1) = 0.1334209;
	v(2) = -1.940463;
	vf.push_back(v);
	v(0) = 0.5370512;
	v(1) = 0.3756554;
	v(2) = -1.835002;
	vf.push_back(v);
	v(0) = -0.121867;
	v(1) = 0.5088605;
	v(2) = -1.86766;
	vf.push_back(v);
	v(0) = 0.01327105;
	v(1) = 0.2981675;
	v(2) = -1.295172;
	vf.push_back(v);
	v(0) = 0.06385964;
	v(1) = 0.06385964;
	v(2) = -1.775718;
	vf.push_back(v);
	v(0) = 0.1308552;
	v(1) = 0.03710117;
	v(2) = -1.847254;
	vf.push_back(v);
	v(0) = 0.2184982;
	v(1) =  -0.0005820728;
	v(2) =  -1.434994;
	vf.push_back(v);
	v(0) = -0.3604803;
	v(1) = 0.170305;
	v(2) = -1.455718;
	vf.push_back(v);
	v(0) = 0.2714543;
	v(1) = 0.0408966;
	v(2) = -1.728468;
	vf.push_back(v);
	v(0) = -0.334161;
	v(1) = 0.2563898;
	v(2) = -1.391769;
	vf.push_back(v);
	v(0) = 0.1201658;
	v(1) = 0.2787164;
	v(2) = -1.708629;
	vf.push_back(v);
	v(0) = 0.03599465;
	v(1) =  0.02319579;
	v(2) = -1.336398;
	vf.push_back(v);
	v(0) = -0.3333684;
	v(1) =  0.05268065;
	v(2) = -1.2545;
	vf.push_back(v);
	v(0) = 0.1902567;
	v(1) = 0.01217167;
	v(2) = -1.326371;
	vf.push_back(v);
	v(0) = 0.2239019;
	v(1) = 0.5010576;
	v(2) = -2.055832;
	vf.push_back(v);
	v(0) = 0.08958202;
	v(1) = 0.2709552;
	v(2) = -1.891832;
	vf.push_back(v);
	v(0) = 0.3768608;
	v(1) = 0.1973026;
	v(2) = -1.808615;
	vf.push_back(v);
	v(0) = 0.1046013;
	v(1) = 0.08447044;
	v(2) = -1.461086;
	vf.push_back(v);
}

//Dummy screen data
void buildVt(vector<Vector2d,aligned_allocator<Vector2d>> &vt)
{
	Vector2d v2;
	v2(0) = 192;
	v2(1) = 96;
	vt.push_back(v2);
	v2(0) = 576;
	v2(1) = 96;
	vt.push_back(v2);
	v2(0) = 960;
	v2(1) = 96;
	vt.push_back(v2);
	v2(0) = 1344;
	v2(1) = 96;
	vt.push_back(v2);
	v2(0) = 1728;
	v2(1) = 96;
	vt.push_back(v2);
	v2(0) = 192;
	v2(1) = 312;
	vt.push_back(v2);
	v2(0) = 576;
	v2(1) = 312;
	vt.push_back(v2);
	v2(0) = 960;
	v2(1) = 312;
	vt.push_back(v2);
	v2(0) = 1344;
	v2(1) = 312;
	vt.push_back(v2);
	v2(0) = 1728;
	v2(1) = 312;
	vt.push_back(v2);
	v2(0) = 192;
	v2(1) = 528;
	vt.push_back(v2);
	v2(0) = 576;
	v2(1) = 528;
	vt.push_back(v2);
	v2(0) = 960;
	v2(1) = 528;
	vt.push_back(v2);
	v2(0) = 1344;
	v2(1) = 528;
	vt.push_back(v2);
	v2(0) = 1728;
	v2(1) = 528;
	vt.push_back(v2);
	v2(0) = 192;
	v2(1) = 744;
	vt.push_back(v2);
	v2(0) = 576;
	v2(1) = 744;
	vt.push_back(v2);
	v2(0) = 960;
	v2(1) = 744;
	vt.push_back(v2);
	v2(0) = 1344;
	v2(1) = 744;
	vt.push_back(v2);
	v2(0) = 1728;
	v2(1) = 744;
	vt.push_back(v2);
	v2(0) = 192;
	v2(1) = 960;
	vt.push_back(v2);
	v2(0) = 576;
	v2(1) = 960;
	vt.push_back(v2);
	v2(0) = 960;
	v2(1) = 960;
	vt.push_back(v2);
	v2(0) = 1344;
	v2(1) = 960;
	vt.push_back(v2);
	v2(0) = 1728;
	v2(1) = 960;
	vt.push_back(v2);
	v2(0) = 192;
	v2(1) = 96;
	vt.push_back(v2);
	v2(0) = 576;
	v2(1) = 96;
	vt.push_back(v2);
	v2(0) = 960;
	v2(1) = 96;
	vt.push_back(v2);
	v2(0) = 1344;
	v2(1) = 96;
	vt.push_back(v2);
	v2(0) = 1728;
	v2(1) = 96;
	vt.push_back(v2);
}

//Dummy World data (unit: m)
void buildVf(vector<Vector3d,aligned_allocator<Vector3d>> &vf)
{
	Vector3d v1;
	v1(0) = -0.022621147155761717;
	v1(1) = 0.38774725341796873;
	v1(2) = 0.1269190673828125;
	vf.push_back(v1);
	v1(0) = -0.050548507690429685;
	v1(1) = 0.48674676513671877;
	v1(2) = 0.15059318542480468;
	vf.push_back(v1);
	v1(0) = -0.071583969116210941;
	v1(1) = 0.35663726806640628;
	v1(2) = 0.11513092041015625;
	vf.push_back(v1);
	v1(0) = -0.11799789428710937;
	v1(1) = 0.47049493408203125;
	v1(2) = 0.14779368591308595;
	vf.push_back(v1);
	v1(0) = -0.12474505615234376;
	v1(1) = 0.35620223999023437;
	v1(2) = 0.11392384338378907;
	vf.push_back(v1);
	v1(0) = -0.019622428894042969;
	v1(1) = 0.46816082763671873;
	v1(2) = 0.12061217498779297;
	vf.push_back(v1);
	v1(0) = -0.048498607635498049;
	v1(1) = 0.32230554199218753;
	v1(2) = 0.095608802795410161;
	vf.push_back(v1);
	v1(0) = -0.079887237548828122;
	v1(1) = 0.45576977539062502;
	v1(2) = 0.13440872192382813;
	vf.push_back(v1);
	v1(0) = -0.090922668457031244;
	v1(1) = 0.3146878967285156;
	v1(2) = 0.092620956420898432;
	vf.push_back(v1);
	v1(0) = -0.14409155273437499;
	v1(1) = 0.466261474609375;
	v1(2) = 0.12376845550537109;
	vf.push_back(v1);
	v1(0) = -0.017212881088256835;
	v1(1) = 0.30422473144531248;
	v1(2) = 0.082259178161621094;
	vf.push_back(v1);
	v1(0) = -0.045188476562500003;
	v1(1) = 0.39570046997070313;
	v1(2) = 0.10126533508300781;
	vf.push_back(v1);
	v1(0) = -0.070368377685546879;
	v1(1) = 0.33771701049804687;
	v1(2) = 0.086266128540039066;
	vf.push_back(v1);
	v1(0) = -0.10274946594238281;
	v1(1) = 0.39483236694335938;
	v1(2) = 0.098369087219238288;
	vf.push_back(v1);
	v1(0) = -0.11732191467285157;
	v1(1) = 0.34514050292968751;
	v1(2) = 0.08450955200195312;
	vf.push_back(v1);
	v1(0) = -0.020879354476928711;
	v1(1) = 0.43182464599609377;
	v1(2) = 0.088839363098144525;
	vf.push_back(v1);
	v1(0) = -0.046161254882812502;
	v1(1) = 0.3972061767578125;
	v1(2) = 0.071852272033691406;
	vf.push_back(v1);
	v1(0) = -0.067129570007324224;
	v1(1) = 0.34340292358398439;
	v1(2) = 0.075639427185058589;
	vf.push_back(v1);
	v1(0) = -0.10812483978271484;
	v1(1) = 0.44349353027343752;
	v1(2) = 0.083343391418457036;
	vf.push_back(v1);
	v1(0) = -0.10961792755126953;
	v1(1) = 0.31100454711914061;
	v1(2) = 0.061563499450683595;
	vf.push_back(v1);
	v1(0) = -0.021026494979858399;
	v1(1) = 0.45146182250976563;
	v1(2) = 0.076992515563964845;
	vf.push_back(v1);
	v1(0) = -0.042361728668212889;
	v1(1) = 0.31638238525390627;
	v1(2) = 0.054041759490966797;
	vf.push_back(v1);
	v1(0) = -0.072913192749023442;
	v1(1) = 0.4203233947753906;
	v1(2) = 0.058085742950439452;
	vf.push_back(v1);
	v1(0) = -0.091090324401855466;
	v1(1) = 0.31261776733398439;
	v1(2) = 0.04887359619140625;
	vf.push_back(v1);
	v1(0) = -0.13445088195800781;
	v1(1) = 0.42511129760742189;
	v1(2) = 0.060736068725585936;
	vf.push_back(v1);
	v1(0) = -0.016986076354980468;
	v1(1) = 0.27146170043945311;
	v1(2) = 0.10301142883300782;
	vf.push_back(v1);
	v1(0) = -0.038408023834228519;
	v1(1) = 0.35083627319335936;
	v1(2) = 0.11071772003173828;
	vf.push_back(v1);
	v1(0) = -0.061872913360595701;
	v1(1) = 0.28067010498046874;
	v1(2) = 0.091477111816406248;
	vf.push_back(v1);
	v1(0) = -0.10767545318603515;
	v1(1) = 0.4559621887207031;
	v1(2) = 0.14422778320312499;
	vf.push_back(v1);
	v1(0) = -0.11666415405273438;
	v1(1) = 0.34573306274414062;
	v1(2) = 0.11103826141357422;
	vf.push_back(v1);
}

int main()
{
	vector<Vector2d,aligned_allocator<Vector2d>> vt;//screen=to
	vector<Vector3d,aligned_allocator<Vector3d>> vf;//world=from
	
	buildVf(vf);//vf: world points
	buildVt(vt);//vt: screen points

	//test SPAAM_DATA_MATLAB dataset 2 
	//buildVt_mb(vt);
	//buildVf_mb(vf);

	SPAAM_SVD nsvd;

	//assign dummy data to nsvd calculator
	for(unsigned int i=0; i<vf.size();i++)
	{
		Correspondence_Pair ncp(vf[i](0), vf[i](1), vf[i](2), vt[i](0), vt[i](1));
		nsvd.corr_points.push_back(ncp);
	}

	nsvd.projectionDLTImpl();
	//cout<<nsvd.projectionDLTImpl()<<endl;
	//cout<<"--------The GL reprojection cam is:----"<<endl;
	
	return 0;
}